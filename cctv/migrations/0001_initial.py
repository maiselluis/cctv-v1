# Generated by Django 5.1.4 on 2024-12-16 20:28

import cctv.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('account_type', models.TextField(max_length=255, verbose_name='Account Type')),
            ],
            options={
                'verbose_name': 'Account Type',
                'verbose_name_plural': 'Accounts Type',
                'db_table': 'tb_account_type',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('area', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Casino Location',
                'verbose_name_plural': 'Casino Locations',
                'db_table': 'tb_area',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='AreaCashier',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('area_cashier', models.TextField(max_length=255, verbose_name='Area Cashier')),
            ],
            options={
                'verbose_name': 'Cashier Location',
                'verbose_name_plural': 'Cashiers Location',
                'db_table': 'tb_area_cashier',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='CDErrorType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('error_type', models.TextField(max_length=255, verbose_name='Cash Desk Error Type')),
            ],
            options={
                'verbose_name': 'Cash Desk Error Type',
                'verbose_name_plural': 'Cash Desk Errors Types',
                'db_table': 'tb_cd_error_type',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('customer', models.TextField(max_length=255, verbose_name='Customers')),
                ('photo', models.ImageField(default='images/noimage.png', upload_to='images/')),
            ],
            options={
                'verbose_name': 'Customers',
                'verbose_name_plural': 'Customers',
                'db_table': 'tb_customer',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(max_length=255, verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'db_table': 'tb_department',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Duration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('duration', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Duration',
                'verbose_name_plural': 'Durations',
                'db_table': 'tb_duration',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ExceptionType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('exeption_type', models.TextField(max_length=255, verbose_name='Cash Desk Exeption Type')),
            ],
            options={
                'verbose_name': 'Cash Desk Exeption Type',
                'verbose_name_plural': 'Cash Desk Exeption Types',
                'db_table': 'tb_cd_exeption_type',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('location', models.TextField(max_length=255, verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branchs',
                'db_table': 'tb_location',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='PokerCombination',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('poker_combination', models.TextField(max_length=255, verbose_name='Poker Combination')),
            ],
            options={
                'verbose_name': 'Poker Combination',
                'verbose_name_plural': 'Poker Combination',
                'db_table': 'tb_poker_combination',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='PokerTable',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('poker_table', models.TextField(max_length=255, verbose_name='Poker Table')),
            ],
            options={
                'verbose_name': 'Poker Table',
                'verbose_name_plural': 'Poker Table',
                'db_table': 'tb_poker_table',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('race', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Race',
                'verbose_name_plural': 'Races',
                'db_table': 'race',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Reason',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('reason', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Reason',
                'verbose_name_plural': 'Reasons',
                'db_table': 'tb_reason',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='ReportOrigination',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('origination', models.TextField(max_length=255, verbose_name='Origination')),
            ],
            options={
                'verbose_name': 'Report Origination',
                'verbose_name_plural': 'Report Originations',
                'db_table': 'tb_report_origination',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='ReportTitle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.TextField(max_length=255, verbose_name='Report')),
            ],
            options={
                'verbose_name': 'Report Title',
                'verbose_name_plural': 'Reports Titles',
                'db_table': 'tb_report_title',
                'ordering': ['type_report'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='ReportType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('report_type', models.TextField(max_length=255, verbose_name='Report Type')),
            ],
            options={
                'verbose_name': 'Report Type',
                'verbose_name_plural': 'Report Types',
                'db_table': 'tb_report_type',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sex', models.CharField(max_length=10, verbose_name='Sex')),
            ],
            options={
                'verbose_name': 'Sex',
                'verbose_name_plural': 'Sex',
                'db_table': 'tb_sex',
                'ordering': ['id'],
                'get_latest_by': '-id',
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('shift', models.TextField(max_length=50)),
            ],
            options={
                'verbose_name': 'Shift',
                'verbose_name_plural': 'Shifts',
                'db_table': 'tb_shift',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('token', models.TextField(max_length=255, verbose_name='Token')),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'db_table': 'tb_token',
                'ordering': ['id'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Position', max_length=50, verbose_name='Position')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_position_department', to='cctv.department')),
            ],
            options={
                'verbose_name': 'Position',
                'verbose_name_plural': 'Positions',
                'db_table': 'tb_position',
                'ordering': ('department', 'id'),
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Report')),
                ('date', models.DateField(verbose_name='Date')),
                ('time', models.TimeField(verbose_name='Time')),
                ('detail', models.TextField(blank=True, max_length=255, null=True, verbose_name='Detail')),
                ('action_token', models.TextField(blank=True, max_length=255, null=True, verbose_name='Action Token')),
                ('value_us', models.FloatField(blank=True, null=True, verbose_name='Values')),
                ('winning', models.IntegerField(blank=True, null=True, verbose_name='Winning Numbers')),
                ('box', models.IntegerField(blank=True, null=True, verbose_name='Box')),
                ('money_recovered', models.FloatField(blank=True, null=True, verbose_name='Money Recovered')),
                ('money_not_recovered', models.FloatField(blank=True, null=True, verbose_name='Money Not Recovered')),
                ('money_paid', models.FloatField(blank=True, null=True, verbose_name='Money Payd')),
                ('money_not_paid', models.FloatField(blank=True, null=True, verbose_name='Money Not Payd')),
                ('dubbed_to', models.BooleanField(blank=True, default=False, null=True, verbose_name='Footage')),
                ('usd_rate', models.FloatField(blank=True, default=7.5, null=True, verbose_name='USD Rate')),
                ('euro_rate', models.FloatField(blank=True, default=8.5, null=True, verbose_name='EURO Rate')),
                ('gbp_rate', models.FloatField(blank=True, default=8.5, null=True, verbose_name='GBP Rate')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_area', to='cctv.area', verbose_name='Area')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_customer_report', to='cctv.customer', verbose_name='Customer')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_location_report', to='cctv.location', verbose_name='Location')),
                ('origination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_origination', to='cctv.reportorigination', verbose_name='Report Origination')),
                ('report_title', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_report_title_report', to='cctv.reporttitle', verbose_name='Report Title')),
                ('report_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_report_type', to='cctv.reporttype', verbose_name='Report Type')),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'db_table': 'tb_report',
                'ordering': ['report'],
                'get_latest_by': '-report',
            },
        ),
        migrations.CreateModel(
            name='Counterfait',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Nro.')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('usd_dolar', models.FloatField(verbose_name='USD Dolar')),
                ('tt_dolar', models.FloatField(verbose_name='TTL Dolar')),
                ('euro_dolar', models.FloatField(verbose_name='EURO Dolar')),
                ('gbp_dolar', models.FloatField(verbose_name='GBP Dolar')),
                ('serial_number', models.TextField(max_length=11)),
                ('notes', models.TextField(max_length=255, verbose_name='Detail')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_location_counterfait', to='cctv.location', verbose_name='Location')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='report_counterfaith', to='cctv.report', verbose_name='Report')),
            ],
            options={
                'verbose_name': 'Counterfait',
                'verbose_name_plural': 'Counterfait',
                'db_table': 'tb_counterfait',
                'ordering': ['id', 'date', 'location', 'time'],
                'get_latest_by': '-id',
            },
        ),
        migrations.AddField(
            model_name='reporttitle',
            name='type_report',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_report_title', to='cctv.reporttype', verbose_name='Report Type'),
        ),
        migrations.CreateModel(
            name='ReportVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(blank=True, null=True, upload_to='videos/')),
                ('caption', models.TextField()),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='cctv.report')),
            ],
            options={
                'verbose_name': 'Videos',
                'verbose_name_plural': 'Videos',
                'db_table': 'tb_videos',
                'ordering': ['report'],
                'get_latest_by': '-report',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('photo', models.ImageField(default='images/noimage.jpg', upload_to='images/')),
                ('active', models.BooleanField(default=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position_department', to='cctv.department')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cctv.location', verbose_name='location')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='position_position', to='cctv.position')),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staffs',
                'db_table': 'tb_staff',
                'ordering': ('id',),
                'get_latest_by': 'id',
            },
        ),
        migrations.AddField(
            model_name='report',
            name='cctv_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_cctv_Staff', to='cctv.staff', verbose_name='Cctc Id'),
        ),
        migrations.AddField(
            model_name='report',
            name='dealer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_dealer', to='cctv.staff', verbose_name='Inspector'),
        ),
        migrations.AddField(
            model_name='report',
            name='duty_manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_duty_manager', to='cctv.staff', verbose_name='Duty Manager'),
        ),
        migrations.AddField(
            model_name='report',
            name='inspector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_inspector', to='cctv.staff', verbose_name='Inspector'),
        ),
        migrations.AddField(
            model_name='report',
            name='other',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_other', to='cctv.staff', verbose_name='Other'),
        ),
        migrations.AddField(
            model_name='report',
            name='pittboss',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_pitboss', to='cctv.staff', verbose_name='Pit Boss'),
        ),
        migrations.CreateModel(
            name='Poker_Payout',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('time', models.TimeField(default='06:00:00', verbose_name='Time')),
                ('bet', models.FloatField(verbose_name='Bet')),
                ('payout', models.FloatField(verbose_name='Payout')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_poker_payout', to='cctv.customer', verbose_name='Customer')),
                ('location', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_poker_error', to='cctv.location', verbose_name='Branh')),
                ('combination', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_poquer_combination', to='cctv.pokercombination', verbose_name='Combination')),
                ('table', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_poker_table', to='cctv.pokertable', verbose_name='Poker Table')),
                ('dealer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_dealer_poker', to='cctv.staff', verbose_name='Dealer')),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_inspector_poker', to='cctv.staff', verbose_name='Inspector')),
                ('pitboss', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_pitboos_poker', to='cctv.staff', verbose_name='Customer')),
            ],
            options={
                'verbose_name': 'Poker Payout',
                'verbose_name_plural': 'Poker Payouts',
                'db_table': 'tb_poker_payout',
                'ordering': ['id'],
                'get_latest_by': '-id',
            },
        ),
        migrations.CreateModel(
            name='DailyExeption',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Date')),
                ('daily_from', models.TimeField(verbose_name='From')),
                ('daily_to', models.TimeField(verbose_name='To')),
                ('total_hours', models.DecimalField(decimal_places=2, editable=False, max_digits=5)),
                ('old_shift', models.TimeField(verbose_name='Old Shift')),
                ('new_shift', models.TimeField(verbose_name='New Shift')),
                ('detail', models.TextField(max_length=255, verbose_name='Detail')),
                ('exception_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_daily_exception', to='cctv.exceptiontype', verbose_name='Exeption Type')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_location_daily_exception', to='cctv.location', verbose_name='Location')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='employee_daily_exception', to='cctv.staff', verbose_name='Employeee')),
            ],
            options={
                'verbose_name': 'Daily Exeption',
                'verbose_name_plural': 'Daily Exeptions',
                'db_table': 'tb_daily_exeption',
                'ordering': ['id', 'date', 'location'],
                'get_latest_by': 'id',
            },
        ),
        migrations.CreateModel(
            name='Cash_Desk_Error',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='Cash Desk Error')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('time', models.TimeField(default='06:00:00', verbose_name='Time')),
                ('tt', models.FloatField(default=1, verbose_name='TTD')),
                ('usd', models.FloatField(default=1, verbose_name='USD')),
                ('euro', models.FloatField(default=1, verbose_name='EURO')),
                ('area_cashier', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_area_cashier_cderror', to='cctv.areacashier', verbose_name='Area Cashier')),
                ('error_type', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='error_type_cash_desk_error', to='cctv.cderrortype', verbose_name='CD Error Type')),
                ('location', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_branch_cd_error', to='cctv.location', verbose_name='Branh')),
                ('cashier', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_cashier_cash_desk_error', to='cctv.staff', verbose_name='Cashier')),
                ('duty_manager', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_duty_manager_dalily_cash_desk_error', to='cctv.staff', verbose_name='Duty Manager')),
                ('supervisor', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_supervisor_cash_desk_error', to='cctv.staff', verbose_name='Supervisor/Senior')),
            ],
            options={
                'verbose_name': 'Cash Desk Error',
                'verbose_name_plural': 'Cash Desk Errors',
                'db_table': 'tb_cash_desk_error',
                'ordering': ['id'],
                'get_latest_by': '-id',
            },
        ),
        migrations.CreateModel(
            name='BlackList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('surname', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('details', models.TextField()),
                ('picture', models.ImageField(default='images/noimage.jpg', upload_to='images/')),
                ('duration', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cctv.duration', verbose_name='duration')),
                ('location', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='cctv.location', verbose_name='location')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cctv.race', verbose_name='race')),
                ('reason', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cctv.reason', verbose_name='reason')),
                ('sex', models.ForeignKey(default='Male', on_delete=django.db.models.deletion.DO_NOTHING, to='cctv.sex', verbose_name='sex')),
                ('blacklistby', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='blacklistby', to='cctv.staff', verbose_name='blacklistby')),
            ],
            options={
                'verbose_name': 'Costumer in Black List',
                'verbose_name_plural': 'Costumers in Black List',
                'db_table': 'tb_blacklist',
                'ordering': ['-date'],
                'get_latest_by': '-date',
            },
        ),
        migrations.CreateModel(
            name='Cash_Desk_Transaction',
            fields=[
                ('transactions', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Transaction')),
                ('date', models.DateField(verbose_name='Date')),
                ('time', models.TimeField(verbose_name='Time')),
                ('tt_dolar', models.FloatField(blank=True, default=0, null=True, verbose_name='TT Dolar')),
                ('usd_dolar', models.FloatField(blank=True, default=0, null=True, verbose_name='USD Dolar')),
                ('euro_dolar', models.FloatField(blank=True, default=0, null=True, verbose_name='EURO Dolar')),
                ('gbp_dolar', models.FloatField(blank=True, default=0, null=True, verbose_name='GBP Dolar')),
                ('cad_dolar', models.FloatField(blank=True, default=0, null=True, verbose_name='CAD Dolar')),
                ('account_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_account_type', to='cctv.accounttype', verbose_name='Account Type')),
                ('area_cashier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_area_cashier_transaction', to='cctv.areacashier', verbose_name='Area Cashier')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_customer', to='cctv.customer', verbose_name='Customer')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_location_cash_transaction', to='cctv.location', verbose_name='Location')),
                ('autorized_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_autorized', to='cctv.staff', verbose_name='Autorized by')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_employee', to='cctv.staff', verbose_name='Employee')),
                ('token', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_token', to='cctv.token', verbose_name='Token')),
            ],
            options={
                'verbose_name': 'Cash Desk Tansactions',
                'verbose_name_plural': 'Cash Desk Transactions',
                'db_table': 'tb_cash_desk_transactions',
                'ordering': ['transactions', 'date', 'time', 'location'],
                'get_latest_by': '-transactions',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cctv.location')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profile',
                'db_table': 'tb_userprofile',
                'ordering': ['location'],
                'get_latest_by': 'location',
            },
        ),
        migrations.CreateModel(
            name='Main',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Date')),
                ('usd_rate', models.FloatField(default=7.5, verbose_name='USD Rate')),
                ('euro_rate', models.FloatField(default=8.5, verbose_name='EURO Rate')),
                ('gbp_rate', models.FloatField(default=8.5, validators=[cctv.models.validate_decimals], verbose_name='GBP Rate')),
                ('casino_open', models.TimeField(verbose_name='Opening')),
                ('casino_close', models.TimeField(verbose_name='Close')),
                ('detail', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_location_main', to='cctv.location', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Main',
                'verbose_name_plural': 'Main',
                'db_table': 'tb_main',
                'ordering': ['date', 'location'],
                'get_latest_by': 'date',
                'unique_together': {('date', 'location')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='report',
            unique_together={('date', 'location', 'time', 'report')},
        ),
        migrations.CreateModel(
            name='DailyShift',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Date')),
                ('usd_rate', models.FloatField(default=7.5, verbose_name='USD Rate')),
                ('euro_rate', models.FloatField(default=8.5, verbose_name='EURO Rate')),
                ('gbp_rate', models.FloatField(default=8.5, validators=[cctv.models.validate_decimals], verbose_name='GBP Rate')),
                ('casino_open', models.TimeField(default='10:00:00', verbose_name='Opening')),
                ('casino_close', models.TimeField(default='04:00:00', verbose_name='Close')),
                ('detail', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('message_book', models.TextField(verbose_name='Message')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_location_daily', to='cctv.location', verbose_name='Location')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_shift', to='cctv.shift', verbose_name='Shift')),
                ('officer1', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_officer1', to='cctv.staff', verbose_name='officer1')),
                ('officer2', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_officer2', to='cctv.staff', verbose_name='officer2')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fk_supervisor', to='cctv.staff', verbose_name='supervisor')),
            ],
            options={
                'verbose_name': 'Daily Shift',
                'verbose_name_plural': 'Daily Shifts',
                'db_table': 'tb_daily_shift',
                'ordering': ['id', 'date', 'location', 'shift'],
                'get_latest_by': 'id',
                'unique_together': {('date', 'location', 'shift')},
            },
        ),
    ]
